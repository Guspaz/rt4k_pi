@inherits RazorSliceHttpResult<AppState>
@implements IUsesLayout<_Layout, LayoutModel>

@functions {
    LayoutModel? _layoutModel = null;

    public LayoutModel LayoutModel
    {
        get
        {
            if (_layoutModel == null)
            {
                string error = "";
                if (Model.Command == "DoUpdate")
                {
                    if (!Model.IsLinux)
                    {
                        error = "Unable to update on Windows";
                    }
                    else if (Model.Installer.Updating)
                    {
                        error = "Update already in progress";
                    }
                    else
                    {
                        Task.Run(() => { Model.Installer.DoUpdate(); });
                    }
                }

                _layoutModel = new() { Title = "Settings", Error = error };
            }
            
            return _layoutModel;
        }
    }
}

<h2>Updates</h2>

<div class="w3-panel">
    <table class='w3-table-all w3-card' style='max-width: 700px;'>
        <tr><th>Current version:</th><td>@(rt4k_pi.Program.VERSION)</td></tr>
        <tr><th>Latest version:</th><td><span id="latestVersion">@Model.Settings.LatestVersion</span>&nbsp;&nbsp; <button class="@LayoutModel.ButtonClasses" onclick="checkUpdates(); return false;" type="button" id="checkUpdatesButton">Check for updates</button>&nbsp;<a class="@LayoutModel.ButtonClasses" href="/Settings/DoUpdate">Install update</a></td></tr>
        <tr><th>Status:</th><td id="updateStatus"></td></tr>
    </table>
</div>

<script>
    async function checkUpdates() {
        try {
            document.getElementById("checkUpdatesButton").disabled = true;

            const response = await fetch("/CheckUpdates");
            if (!response.ok) {
                throw new Error("Network response was not ok")
            }
            const data = await response.text()
            document.getElementById("latestVersion").textContent = data;
        }
        catch (error) {
            console.error("Error fetching latest version:", error);
            document.getElementById("latestVersion").textContent = "Error";
        }
        finally {
            document.getElementById("checkUpdatesButton").disabled = false;
        }
    }


    const url = "/GetUpdateStatus";

    // Function to update table cell content
    async function updateTableCell() {
        try {
            const response = await fetch(url);
            if (!response.ok) {
                throw new Error("Network response was not ok");
            }
            const data = await response.text(); // Adjust if response is JSON
            document.getElementById("updateStatus").textContent = data;
        } catch (error) {
            console.error("Error fetching update status:", error);
            document.getElementById("updateStatus").textContent = "Unknown";
        } finally {
            // Schedule the next update only after the current one finishes
            setTimeout(updateTableCell, 1000);
        }
    }

    // Start the update loop
    updateTableCell();
</script>

<h2>Services</h2>

<div class='w3-panel'>
    <table class='w3-table-all w3-card' style='max-width: 700px;'>
        <tr><th style="width: 25%;">WebDAV</th><td><input class="w3-check" id="enable_webdav" type="checkbox" disabled /> <label for="enable_webdav">Enable</label></td></tr>
        <tr><th>ser2net</th><td><input class="w3-check" id="enable_ser2net" type="checkbox" checked disabled/> <label for="enable_ser2net">Enable</label></td></tr>
        <tr><th>Log web requests</th><td><input class="w3-check" id="log_webrequests" type="checkbox" checked disabled /> <label for="log_webrequests">Enable</label></td></tr>
        <tr><th>Pizza</th><td><input class="w3-check" id="enable_pizza" type="checkbox" checked disabled /> <label for="enable_ser2net">Enable</label></td></tr>
    </table>
</div>